{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"WELCOME TO STARDOJO'S DOCUMENTATION!","text":""},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#installation","title":"Installation","text":"<ul> <li>Prerequisites</li> <li>StarDojo Installation</li> </ul>"},{"location":"#benchmarking","title":"Benchmarking","text":"<ul> <li>Running StarDojo</li> <li>Configuration Files</li> </ul>"},{"location":"#action-space","title":"Action Space","text":""},{"location":"#observation-space","title":"Observation Space","text":""},{"location":"#summary","title":"Summary","text":""},{"location":"action_space/","title":"Action Space","text":"<p>The action space in StarDojo defines the actions agent can perform within the Stardew Valley environment. Each action corresponds to a registered skill function and supports a clear call template and parameter specification.</p> <p>Below is a list of available actions:</p>"},{"location":"action_space/#movex-y","title":"\ud83d\udd04 <code>move(x, y)</code>","text":"<p>Move to the tile at position <code>(x, y)</code>.</p> <ul> <li>Parameters:</li> <li><code>x</code> (int): X-coordinate of the destination.</li> <li><code>y</code> (int): Y-coordinate of the destination.</li> </ul>"},{"location":"action_space/#craftitem","title":"\ud83d\udee0 <code>craft(item)</code>","text":"<p>Craft an item by name.</p> <ul> <li>Parameters:</li> <li><code>item</code> (str): Name of the item to craft (e.g., <code>\"chest\"</code>).</li> </ul>"},{"location":"action_space/#usedirection","title":"\ud83e\ude93 <code>use(direction)</code>","text":"<p>Use the currently selected tool or item in a specified direction.</p> <ul> <li>Parameters:</li> <li><code>direction</code> (str): One of <code>\"up\"</code>, <code>\"right\"</code>, <code>\"down\"</code>, <code>\"left\"</code>.</li> </ul>"},{"location":"action_space/#interactdirection","title":"\ud83c\udfaf <code>interact(direction)</code>","text":"<p>Interact with an object or NPC in a specific direction (also used for harvesting).</p> <ul> <li>Parameters:</li> <li><code>direction</code> (str): One of <code>\"up\"</code>, <code>\"right\"</code>, <code>\"down\"</code>, <code>\"left\"</code>.</li> </ul>"},{"location":"action_space/#choose_itemslot_index","title":"\ud83c\udf92 <code>choose_item(slot_index)</code>","text":"<p>Select an item from the inventory.</p> <ul> <li>Parameters:</li> <li><code>slot_index</code> (int): Slot index (0\u201335).</li> </ul>"},{"location":"action_space/#choose_optionoption_index-quantitynone-directionnone","title":"\ud83d\udcdc <code>choose_option(option_index, quantity=None, direction=None)</code>","text":"<p>Choose an option in a dialog or menu (e.g., shopping or interaction).</p> <ul> <li>Parameters:</li> <li><code>option_index</code> (int): Index of the option (1-based). Use <code>0</code> to close the menu.</li> <li><code>quantity</code> (int, optional): Quantity to buy/sell (default: None).</li> <li><code>direction</code> (str, optional): <code>\"in\"</code> to buy/take, <code>\"out\"</code> to sell/put.</li> </ul>"},{"location":"action_space/#attach_itemslot_index","title":"\ud83d\udd27 <code>attach_item(slot_index)</code>","text":"<p>Attach an item (e.g., bait) to the current tool.</p> <ul> <li>Parameters:</li> <li><code>slot_index</code> (int): Index of the inventory item to attach.</li> </ul>"},{"location":"action_space/#unattach_item","title":"\u274c <code>unattach_item()</code>","text":"<p>Detach the currently attached item from the tool.</p> <ul> <li>Parameters: None</li> </ul>"},{"location":"action_space/#menuoption-menu_name","title":"\ud83d\udcd1 <code>menu(option, menu_name)</code>","text":"<p>Open or close a specific menu.</p> <ul> <li>Parameters:</li> <li><code>option</code> (str): <code>\"open\"</code> or <code>\"close\"</code>.</li> <li><code>menu_name</code> (str): Name of the menu (e.g., <code>\"map\"</code>).</li> </ul>"},{"location":"action_space/#navigatename","title":"\ud83e\udded <code>navigate(name)</code>","text":"<p>Navigate to a known location using the built-in pathfinding system.</p> <ul> <li>Parameters:</li> <li><code>name</code> (str): Name of the target location (e.g., <code>\"farm\"</code>).</li> </ul> <p>\u26a0\ufe0f Note: The <code>navigate</code> action is disabled by default. To enable it, you must manually configure in the file below: <code>agent/stardojo/environment/stardew/atomic_skills/basic_skills.py</code>.</p> <p>Each action is registered through the <code>@register_skill(...)</code> decorator and invoked by the agent via structured calls. These commands serve as the atomic building blocks for LLM agents in the StarDojo simulation environment.</p>"},{"location":"observation_space/","title":"Observation Space","text":"<p>The observation space in StarDojo provides a structured and comprehensive snapshot of the agent's environment at each timestep. Observations are returned as a Python dictionary with the following fields:</p>"},{"location":"observation_space/#agent-state","title":"\ud83e\uddcd Agent State","text":"<ul> <li> <p><code>energy</code> (<code>str</code>)   The agent\u2019s current stamina.</p> </li> <li> <p><code>money</code> (<code>str</code>)   The amount of gold the player holds.</p> </li> <li> <p><code>location</code> (<code>str</code>)   Name of the current game location (e.g., <code>\"Farm\"</code>, <code>\"Town\"</code>).</p> </li> <li> <p><code>position</code> (<code>[int, int]</code>)   Player's current tile coordinates.</p> </li> <li> <p><code>facing_direction</code> (<code>str</code>)   Human-readable direction: <code>\"up\"</code>, <code>\"down\"</code>, <code>\"left\"</code>, <code>\"right\"</code>.</p> </li> <li> <p><code>inventory</code> (<code>list[dict]</code>)   A list of all inventory items, with fields such as:</p> </li> <li> <p><code>Name</code>, <code>Stack</code>, <code>Category</code>, etc.</p> </li> <li> <p><code>chosen_item</code> (<code>dict</code>)   The currently selected item from inventory. Contains item-specific info.</p> </li> </ul>"},{"location":"observation_space/#world-state","title":"\ud83d\udd52 World State","text":"<ul> <li> <p><code>time</code> (<code>str</code>)   Current in-game time (e.g., <code>\"7:00 AM\"</code>).</p> </li> <li> <p><code>day</code> (<code>str</code>)   Current day of the month (1\u201328).</p> </li> <li> <p><code>season</code> (<code>str</code>)   Current season: <code>\"spring\"</code>, <code>\"summer\"</code>, <code>\"fall\"</code>, or <code>\"winter\"</code>.</p> </li> </ul>"},{"location":"observation_space/#farm-information","title":"\ud83d\udc04 Farm Information","text":"<ul> <li> <p><code>farm_animals</code> (<code>list[dict]</code>)   All animals on the farm, with type and position data.</p> </li> <li> <p><code>farm_pets</code> (<code>list[dict]</code>)   Pets on the farm.</p> </li> <li> <p><code>farm_buildings</code> (<code>list[dict]</code>)   Includes barns, coops, silos, etc., with location and state.</p> </li> </ul>"},{"location":"observation_space/#environment-layout","title":"\ud83e\uddf1 Environment Layout","text":"<ul> <li><code>surroundings</code> (<code>list[dict]</code>)   Description of nearby tiles. Each entry includes:</li> <li><code>position</code>: relative offset (e.g., <code>[0, -1]</code>)</li> <li><code>object</code>: list of tags (e.g., <code>\"Type: Dirt\"</code>, <code>\"Diggable: True\"</code>)</li> <li> <p>(Optional) <code>npc on this tile</code></p> </li> <li> <p><code>crops</code> (<code>list[dict]</code>)   Detailed data of visible crops: location, stage, harvestable status.</p> </li> <li> <p><code>exits</code> (<code>list[dict]</code>)   Reachable map exits from the current location.</p> </li> </ul>"},{"location":"observation_space/#structures-interior","title":"\ud83e\uddf1 Structures &amp; Interior","text":"<ul> <li> <p><code>buildings</code> (<code>list[dict]</code>)   General building data visible on the screen (non-farm).</p> </li> <li> <p><code>furniture</code> (<code>list[dict]</code>)   Furniture placed indoors or outdoors, with type and location.</p> </li> </ul>"},{"location":"observation_space/#interactive-elements","title":"\ud83d\udc65 Interactive Elements","text":"<ul> <li> <p><code>npcs</code> (<code>list[dict]</code>)   All nearby non-player characters with positions and metadata.</p> </li> <li> <p><code>shop_counters</code> (<code>list[dict]</code>)   Shop points of interaction, available options, inventory, etc.</p> </li> <li> <p><code>current_menu</code> (<code>dict</code>)   Active UI menu details. May include:</p> </li> <li><code>type</code>, <code>message</code>, <code>shopmenudata</code>, <code>animalsmenudata</code>, etc.</li> </ul>"},{"location":"observation_space/#visual-inputs","title":"\ud83d\uddbc\ufe0f Visual Inputs","text":"<ul> <li><code>image_paths</code> (<code>list[str]</code>)   A list of auto-generated file paths to screenshots representing the current frame, don't need to set manually. Opening the <code>image_obs</code> config in the <code>env_params</code> will enable visual inputs.</li> </ul> <p>\u2139\ufe0f Note: The default observation set is constrained as below, used when a lightweight input is desired:</p> <ul> <li>Health: Current player health (int)  </li> <li>Energy: Current stamina level (float)  </li> <li>Money: Player gold (int)  </li> <li>Current Time: Formatted as <code>\"hh:mm AM/PM\"</code> </li> <li>Day: Current day (int)  </li> <li>Season: <code>\"spring\"</code>, <code>\"summer\"</code>, <code>\"fall\"</code>, or <code>\"winter\"</code> </li> <li>Item in Your Hand:<ul> <li><code>index</code> (int): Slot index  </li> <li><code>currentitem</code> (str): Item name  </li> </ul> </li> <li>Toolbar: 36-slot list in format <code>\"slot_index N: [Item Name] (quantity: Q)\"</code> or <code>\"slot_index N: No item\"</code> </li> <li>Current Menu: A dictionary with keys like <code>type</code>, <code>message</code>, <code>shopmenudata</code> </li> <li>Surrounding Blocks:<ul> <li><code>position</code>: 2D offset  </li> <li><code>object</code>: List of string attributes  </li> <li>(Optional) NPC on this tile</li> </ul> </li> </ul> <p>\ud83d\udca1 Customization Tip: You can freely modify or extend the observation format by editing the <code>_get_obs()</code> method in <code>agent/stardojo/environment/stardew/stardew_env.py</code> under the <code>StarDojo</code> class. Remember to also update the prompt templates to match any changes in the observation structure.</p>"},{"location":"summary/","title":"Summary","text":"<p>For contributions or questions, please refer to the repository README or open an issue.</p> <p>Happy Simulating \ud83c\udf1f</p>"},{"location":"benchmarking/2_1_running/","title":"Running StarDojo","text":"<p>After setup, run python files under the <code>env/</code> directory.</p> Mode Command Description \ud83e\uddea Single Task <code>python llm_env.py</code> Runs a single benchmark task \ud83d\udd01 Multi-task (serial) <code>python llm_env_multi_tasks.py</code> Runs multiple tasks sequentially \u26a1 Multi-task (parallel) <code>python llm_env_multi_tasks_parallel.py</code> Runs multiple tasks in parallel <p>Customize the tasks using <code>--task_params</code>, or <code>--task_name</code> and <code>--task_id</code> when running a single task.</p>"},{"location":"benchmarking/2_2_config_files/","title":"Configuration","text":"<p>There are configurations you need to customize inside the python file you run.</p>"},{"location":"benchmarking/2_2_config_files/#core-configs","title":"Core Configs:","text":"<pre><code>llmProviderConfig     = \"./conf/openai_config.json\"\nembedProviderConfig   = \"./conf/openai_config.json\"\nenvConfig             = \"./conf/env_config_stardew.json\"\n</code></pre> <p>These files are set up under the <code>StarDojo/agent/conf/</code> directory, for your preferred LLM and environment settings.</p>"},{"location":"benchmarking/2_2_config_files/#runtime-parameters-env_params","title":"Runtime Parameters (<code>env_params</code>):","text":"<pre><code>env_params = {\n    'port': 6000,\n    'save_index': 0,\n    'new_game': False,\n    'image_save_path': \"../env/screen_shot_buffer\",\n    'agent': react_agent,\n    'needs_pausing': True,\n    'image_obs': True,\n    'task': task,\n    'output_video': True,\n}\n</code></pre> <ul> <li><code>new_game: True</code> \u2014 The environment will start a fresh game and close it upon task completion.</li> <li><code>new_game: False</code> \u2014 You must manually open the game beforehand.</li> </ul>"},{"location":"installation/1_1_prerequisites/","title":"Prerequisites","text":"<p>Before getting started, ensure the following prerequisites are satisfied:</p>"},{"location":"installation/1_1_prerequisites/#install-stardew-valley","title":"\ud83d\udccc Install Stardew Valley","text":"<p>First things first, make sure you own the official Stardew Valley game. Download and install it from your preferred platform, such as Steam.</p>"},{"location":"installation/1_1_prerequisites/#install-smapi-stardew-modding-api","title":"\ud83d\udd27 Install SMAPI (Stardew Modding API)","text":"<p>SMAPI is required to enable modding support. Our StarDojoMod is dependent of SMAPI.</p> <ul> <li>Official SMAPI website: https://smapi.io/</li> </ul> <p>SMAPI is a community-developed modding API for Stardew Valley that intercepts game behavior and allows external mods to hook into it.</p>"},{"location":"installation/1_1_prerequisites/#install-stardojomod","title":"\ud83d\udd27 Install StarDojoMod","text":""},{"location":"installation/1_1_prerequisites/#directly-download","title":"\ud83d\udce6 Directly Download","text":"<p>If you don\u2019t want to build the mod yourself, no worries \u2014 you can simply download the precompiled version from Nexus Mods:</p> <ul> <li>\ud83d\udc49 Download StarDojoMod from Nexus Mods</li> </ul> <p>After downloading, just extract the contents into your <code>StardewValley/Mods/</code> folder.</p>"},{"location":"installation/1_1_prerequisites/#optional-build-stardojomod-c","title":"\ud83d\udee0 (Optional) Build StarDojoMod (C#)","text":"<p>If you want to build the StarDojoMod from source code:</p> <ol> <li>Open <code>StarDojo/StarDojoMod/StarDojoMod.sln</code> using Visual Studio (VSCode with C# extension is acceptable).</li> <li>Ensure all dependencies are resolved (SMAPI should be referenced).</li> <li>Build the solution to generate the mod DLL.</li> <li>The built mod will be automatically placed in the SMAPI mods folder if properly configured, or you may manually copy the output to your <code>StardewValley/Mods/</code> directory.</li> </ol>"},{"location":"installation/1_2_installation/","title":"StarDojo Installation","text":""},{"location":"installation/1_2_installation/#step-1-add-environment-variables","title":"Step 1: Add Environment Variables","text":"<p>Create or edit the file at <code>StarDojo/env/.env</code> and include the following keys:</p> <pre><code># Required\nSTARDEW_APP_PATH=/path/to/StardewModdingAPI\n\n# Optional (if using external LLM services)\nOA_OPENAI_KEY=sk-xxxx\n</code></pre> <ul> <li>Make sure <code>STARDEW_APP_PATH</code> correctly points to the file path of <code>StardewModdingAPI.exe</code> on Windows or <code>StardewModdingAPI</code> on Linux/Mac.</li> </ul>"},{"location":"installation/1_2_installation/#step-2-initialize-environment","title":"Step 2: Initialize Environment","text":"<pre><code>cd StarDojo\nsource setup.sh\n</code></pre> <p>For Windows, execute the command below instead.</p> <pre><code>.\\setup.ps1\n</code></pre> <p>This command installs dependencies and prepares the shell environment for easy agent launching.</p>"}]}